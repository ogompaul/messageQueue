#BlueJ class context
comment0.target=Ratio
comment0.text=\r\n\ class\ Ratio\ is\ a\ stub\ only,\ \r\n\ a\ sketch\ of\ a\ class\ that\ allows\ elementary\ calculations\r\n\ on\ ratios\ with\ fields\ enumeratorerator\ and\ denominatorminator\ via\ method\ calls\r\n\ \r\n\ @author\ Patrick\ Chimeudeonwo\r\n\ @version\ July\ 2018\r\n
comment1.params=
comment1.target=Ratio()
comment1.text=\r\n\ Default\ Constructor\r\n
comment10.params=z
comment10.target=Ratio\ add(Ratio)
comment10.text=\r\n\ Method\ add\ leaves\ the\ instance\ unchanged\r\n\r\n\ @param\ z\ the\ ratio\ to\ be\ added\ to\ this\r\n\ @return\ a\ new\ instance\ with\ the\ sum\ calulated\r\n
comment11.params=z
comment11.target=Ratio\ multiply(Ratio)
comment11.text=\r\n\ Method\ multiply\ leaves\ the\ instance\ unchanged\r\n\r\n\ @param\ z\ the\ ratio\ to\ be\ multiplied\ with\ this\ ratio\r\n\ @return\ a\ new\ instance\ with\ the\ sum\ calulated\r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ Method\ toString\ leaves\ the\ instance\ unchanged,\r\n\ prints\ the\ ratio\ into\ a\ String\r\n\r\n\ @return\ a\ convenient\ String\ representation\ of\ this\ ratio\r\n
comment13.params=obj
comment13.target=boolean\ equals(java.lang.Object)
comment13.text=\r\n\ Method\ equals\ is\ required\ for\ testing\r\n\ because\ assertEquals\ will\ use\ it,\r\n\ leaves\ the\ instance\ unchanged.\r\n\r\n\ @param\ obj\ any\ object\ that\ might\ be\ a\ ratio\r\n\ @return\ true\ if\ the\ argument\ ratio\ is\ mathematically\ equal\ to\ this\ ratio\r\n
comment14.params=
comment14.target=double\ doubleValue()
comment14.text=\r\n\ Method\ doubleValue\ leaves\ the\ instance\ unchanged\r\n\r\n\ @return\ value\ of\ this\ ratio,\ as\ good\ as\ it\ can\ get\ represented\ by\ a\ double\ value\r\n
comment2.params=enumeratorerator\ denominatorminator
comment2.target=Ratio(int,\ int)
comment2.text=\r\n\ Constructor\r\n
comment3.params=
comment3.target=int\ getnumerator()
comment4.params=
comment4.target=int\ getdenominator()
comment5.params=e
comment5.target=void\ setnumerator(int)
comment6.params=d
comment6.target=void\ setdenominator(int)
comment7.params=z
comment7.target=Ratio(Ratio)
comment7.text=\r\n\ Constructor\r\n
comment8.params=
comment8.target=void\ inverse()
comment8.text=\r\n\ Method\ inverse\ changes\ the\ instance\ to\ the\ inverse\ ratio\r\n\r\n
comment9.params=
comment9.target=Ratio\ inverted()
comment9.text=\r\n\ Method\ inverted\ leaves\ the\ instance\ unchanged\r\n\r\n\ @return\ a\ new\ instance\ with\ the\ inverted\ ratio\r\n
numComments=15
